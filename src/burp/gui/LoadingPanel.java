/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package burp.gui;

import burp.IBurpExtenderCallbacks;
import burp.Multiplayer;
import burp.MultiplayerLogger;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import burp.OnLoadCallback;

/**
 *
 * @author moloch
 */
public class LoadingPanel extends javax.swing.JPanel implements OnLoadCallback {

    private final Multiplayer multiplayer;
    private final List<Runnable> onCompleteCallbacks = new ArrayList<>();
    private final IBurpExtenderCallbacks callbacks;
    private final MultiplayerLogger logger;
    
    /**
     * Creates new form LoadingPanel
     * @param multiplayer
     * @param logger
     */
    public LoadingPanel(Multiplayer multiplayer, MultiplayerLogger logger) {
        this.multiplayer = multiplayer;
        this.logger = logger;
        this.callbacks = logger.callbacks;
        initComponents();
    }
    
    public void initialize() {
        multiplayer.registerOnLoadEventCallback(this);
        multiplayer.initializeHistory();
        multiplayer.startChangefeed();
    }
    
    @Override
    public void onLoad(Integer loaded, Integer count) {
        logger.debug("Loaded event: %d of %d", loaded, count);
        
        if (loaded == null || count == null || count <= loaded) {
            logger.debug("History initialization completed");
            onComplete();
        }
        
        if (0 < count) {
            float progress = (float) loaded / (float) count;
            loadingProgressBar.setValue((int) Math.round(progress * 100.0));   
        }
        
    }
    
    private void onComplete() {
        multiplayer.unregisterOnLoadEventCallback(this);
        triggerOnCompleteCallbacks();
    }
    
    public void registerOnCompleteCallback(Runnable callback) {
        onCompleteCallbacks.add(callback);
    }
    
    private void triggerOnCompleteCallbacks() {
        onCompleteCallbacks.forEach(callback -> {
            callback.run();
        });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadingProgressBar = new javax.swing.JProgressBar();
        loadingLabel1 = new javax.swing.JLabel();

        loadingProgressBar.setStringPainted(true);

        loadingLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loadingLabel1.setText("Downloading History ...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(400, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loadingProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadingLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addContainerGap(400, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(loadingLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadingProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(405, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel loadingLabel1;
    private javax.swing.JProgressBar loadingProgressBar;
    // End of variables declaration//GEN-END:variables

}
